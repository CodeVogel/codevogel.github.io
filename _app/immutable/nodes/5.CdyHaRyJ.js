import{s as j,k as q,l as b,a as E,g as H,i as M,m as g,f as d,e as N,t as P,c as R,b as x,d as z,h as A,j as B,o as D}from"../chunks/scheduler.COaNFsYF.js";import{S as F,i as G,c as V,a as S,m as w,t as c,b as p,d as C,e as $,g as I,f as J,h as v}from"../chunks/index.D2u_QXN2.js";import{p as K}from"../chunks/stores.C-J9fJC0.js";import{S as L,a as O,f as h}from"../chunks/SvxRenderer.D_rPXudQ.js";function k(o){let t,r=o[0].title+"",s,a,i;return{c(){t=N("h1"),s=P(r)},l(e){t=R(e,"H1",{});var l=x(t);s=z(l,r),l.forEach(d)},m(e,l){M(e,t,l),A(t,s),i=!0},p(e,l){(!i||l&1)&&r!==(r=e[0].title+"")&&B(s,r)},i(e){i||(e&&D(()=>{i&&(a||(a=v(t,h,{},!0)),a.run(1))}),i=!0)},o(e){e&&(a||(a=v(t,h,{},!1)),a.run(0)),i=!1},d(e){e&&d(t),e&&a&&a.end()}}}function Q(o){let t,r,s,a,i,e=o[0]!==null&&o[1]&&k(o);function l(n){o[3](n)}function u(n){o[4](n)}let m={slug:o[2].params.slug};return o[0]!==void 0&&(m.frontMatter=o[0]),o[1]!==void 0&&(m.contentVisible=o[1]),r=new O({props:m}),b.push(()=>$(r,"frontMatter",l)),b.push(()=>$(r,"contentVisible",u)),{c(){e&&e.c(),t=E(),V(r.$$.fragment)},l(n){e&&e.l(n),t=H(n),S(r.$$.fragment,n)},m(n,f){e&&e.m(n,f),M(n,t,f),w(r,n,f),i=!0},p(n,f){n[0]!==null&&n[1]?e?(e.p(n,f),f&3&&c(e,1)):(e=k(n),e.c(),c(e,1),e.m(t.parentNode,t)):e&&(I(),p(e,1,1,()=>{e=null}),J());const _={};f&4&&(_.slug=n[2].params.slug),!s&&f&1&&(s=!0,_.frontMatter=n[0],g(()=>s=!1)),!a&&f&2&&(a=!0,_.contentVisible=n[1],g(()=>a=!1)),r.$set(_)},i(n){i||(c(e),c(r.$$.fragment,n),i=!0)},o(n){p(e),p(r.$$.fragment,n),i=!1},d(n){n&&d(t),e&&e.d(n),C(r,n)}}}function T(o){let t,r;return t=new L({props:{$$slots:{default:[Q]},$$scope:{ctx:o}}}),{c(){V(t.$$.fragment)},l(s){S(t.$$.fragment,s)},m(s,a){w(t,s,a),r=!0},p(s,[a]){const i={};a&39&&(i.$$scope={dirty:a,ctx:s}),t.$set(i)},i(s){r||(c(t.$$.fragment,s),r=!0)},o(s){p(t.$$.fragment,s),r=!1},d(s){C(t,s)}}}function U(o,t,r){let s;q(o,K,u=>r(2,s=u));let a=null,i=!1;function e(u){a=u,r(0,a)}function l(u){i=u,r(1,i)}return[a,i,s,e,l]}class y extends F{constructor(t){super(),G(this,t,U,T,j,{})}}export{y as component};
